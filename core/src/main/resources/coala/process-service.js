// Generated by CoffeeScript 1.3.3
(function() {
  var Context, HashMap, KnowledgeBase, KnowledgeService, coala, context, getKnowledgeBase, getKnowledgeService, type;

  coala = require('coala/config').coala;

  type = require('coala/util').type;

  KnowledgeBase = org.drools.KnowledgeBase;

  KnowledgeService = com.zyeeda.framework.knowledge.KnowledgeService;

  Context = com.zyeeda.framework.web.SpringAwareJsgiServlet.Context;

  HashMap = java.util.HashMap;

  context = Context.getInstance(module);

  getKnowledgeBase = function(name) {
    var kbase;
    if (name == null) {
      name = false;
    }
    kbase = name ? context.getBean(name) : context.getBeanByClass(KnowledgeBase);
    if (kbase == null) {
      throw new Error('can not find an knowledgeBase in current thread');
    }
    return kbase;
  };

  getKnowledgeService = function(name) {
    var knowledgeService;
    if (name == null) {
      name = false;
    }
    knowledgeService = name ? context.getBean(name) : context.getBeanByClass(KnowledgeService);
    if (knowledgeService == null) {
      throw new Error('can not find an knowledgeService in current thread');
    }
    return knowledgeService;
  };

  exports.createService = function() {
    return {
      getProcessSession: function(id) {
        var ksession;
        ksession = id ? getKnowledgeService().getProcessSession(id) : getKnowledgeService().getProcessSession();
        return {
          startProcess: function(name, args) {
            var key, map, value;
            map = new HashMap();
            for (key in args) {
              value = args[key];
              map.put(key, value);
            }
            return ksession.startProcess(name, map);
          },
          __noSuchMethod__: function(name, args) {
            if (!ksession[name]) {
              throw new Error("no such method: " + name);
            }
            return ksession[name].apply(ksession, args);
          }
        };
      }
    };
  };

}).call(this);
