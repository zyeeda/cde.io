// Generated by CoffeeScript 1.3.3
(function() {
  var EntityMetaResolver, TaskService, createRouter, generateForms, json, mark, router;

  createRouter = require('coala/router').createRouter;

  mark = require('coala/mark').mark;

  json = require('coala/response').json;

  generateForms = require('coala/scaffold/form-generator').generateForms;

  TaskService = com.zyeeda.framework.bpm.TaskService;

  EntityMetaResolver = com.zyeeda.framework.web.scaffold.EntityMetaResolver;

  router = exports.router = createRouter();

  router.get('/', function(request) {
    var currentUser;
    currentUser = '';
    return json({});
  });

  router.get('/completed', function(request) {
    var currentUser;
    currentUser = '';
    return json({});
  });

  router.get('/comments/:taskId', mark('beans', TaskService).on(function(taskService, request, taskId) {
    return json(taskService.getComments(taskId));
  }));

  router.get('/configuration/feature', function() {
    return json({
      views: [
        {
          name: 'views:operators',
          region: 'operators'
        }, {
          name: 'views:grid',
          region: 'grid'
        }
      ]
    });
  });

  router.get('/configuration/operators', function() {
    return json({
      audit: {
        label: 'Audit',
        icon: 'icon-plus'
      }
    });
  });

  router.get('/configuration/grid', function() {
    return json({});
  });

  router.get('/configuration/forms/:taskId', mark('beans', [TaskService, EntityMetaResolver]).on(function(taskService, resolver, request, taskId) {
    var entityClass, entityMeta, file, form, options, path, task;
    task = taskService.getTask(taskId);
    entityClass = '';
    entityMeta = resolver.resolveClass(entityClass);
    path = entityMeta.path;
    file = '';
    options = require(file);
    form = generateForms(entityMeta, options.labels, options.forms, task.name);
    return json(form);
  }));

}).call(this);
